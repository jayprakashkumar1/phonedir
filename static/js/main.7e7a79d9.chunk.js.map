{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","phone","inputsShow","handleback","bind","assertThisInitialized","showInputs","handleNameChange","handlePhoneChange","handleDelete","handleAdd","arrHeader","contactTable","document","createElement","setAttribute","tr","insertRow","i","length","th","innerHTML","appendChild","getElementById","setState","showContacts","event","target","value","rowNum","parentNode","rowIndex","deleteRow","preventDefault","x","getElementsByClassName","conTab","rowCount","rows","td1","td2","td3","btn","addEventListener","style","color","backgroundColor","padding","cursor","fontFamily","fontSize","fontWeight","border","borderRadius","showAdd1","react_default","a","onClick","className","marginLeft","paddingLeft","paddingRight","inputs","required","onChange","type","pattern","id","opacity","rel","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e7a79d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\nconstructor(props) {\n  super(props)\n  this.state={\n    name:'',\n    phone:'',\n    inputsShow:false,\n  }\n  this.handleback=this.handleback.bind(this);\n  this.showInputs=this.showInputs.bind(this);\n  this.handleNameChange = this.handleNameChange.bind(this);\n  this.handlePhoneChange = this.handlePhoneChange.bind(this);\n  this.handleDelete = this.handleDelete.bind(this);\n  this.handleAdd = this.handleAdd.bind(this);\n}\ncomponentDidMount() {\n  // Add to the list   ............\n    var arrHeader = [];\n    arrHeader = ['NAME','PHONE'];\n\n    var contactTable = document.createElement('table');\n    contactTable.setAttribute('id','tableId');\n    var tr = contactTable.insertRow(-1);\n\n  for(var i=0;i<arrHeader.length;i++) {\n    var th = document.createElement('th');\n    th.innerHTML = arrHeader[i];\n    tr.appendChild(th);\n}\n  var div = document.getElementById('contactsDiv');\n    div.appendChild(contactTable);\n}\nhandleback() {\n  this.setState({inputsShow:false,name:'',phone:'',showContacts:true})\n}\nshowInputs() {\nthis.setState({inputsShow:true,showContacts:false});\n\n}\nhandleNameChange(event) {\n\nthis.setState({name:event.target.value});\n}\nhandlePhoneChange(event) {\n  this.setState({phone:event.target.value});\n}\n\n handleDelete(event) {  \n   var rowNum = event.target.parentNode.parentNode.rowIndex;\n   document.getElementById(\"tableId\").deleteRow(rowNum); //Where 0 is your row.\n \n  }\nhandleAdd(event) {\n  event.preventDefault();   // to prevent form submitition\n\n  // get the form values and add to the list\n  var x = document.getElementsByClassName('inputs');\n  var name = x[0].value;\n  var phone = x[1].value;\n  if(name==='' || phone==='')\n   return;\n\n   // now add new row to the\nvar conTab = document.getElementById('tableId');\nvar rowCount = conTab.rows.length;\nvar tr = conTab.insertRow(rowCount);\n  \n    var td1 = document.createElement('td');\n      td1.innerHTML=name;\n      tr.appendChild(td1);\n\n    var td2 = document.createElement('td');\n      td2.innerHTML=phone;\n      tr.appendChild(td2);\n\n    var td3 = document.createElement('td');\n\n// add button\nvar btn = document.createElement('input');\n  btn.setAttribute('type','button');\n  btn.setAttribute('value','DELETE');\n  btn.setAttribute('className','myBtn');\n  btn.addEventListener(\"click\",this.handleDelete);\n\n  // add style \n  btn.style.color='black';\n  btn.style.backgroundColor='#ff4000';\n  btn.style.padding='10px';\n  btn.style.cursor='pointer';\n  btn.style.fontFamily='ABeeZee';\n  btn.style.fontSize=18;\n  btn.fontWeight='bold';\n  btn.style.border='none';\n  btn.style.borderRadius='4px';\n\n  td3.appendChild(btn);\n  tr.appendChild(td3);\n\n      this.setState({inputsShow:false,name:'',phone:''});\n}\n\n  render() {\n    const showAdd1 = <button onClick={this.showInputs} className=\"myBtn\" style={{color:'white',backgroundColor:'#4CAF50',marginLeft:'10px', padding:'10px',paddingLeft:20,paddingRight:20}}>\n                        ADD \n                      </button>\n\n    const inputs =  <div className='inputsDiv'>\n                      <form>\n                      <br />\n                        <button className=\"backBtn\" onClick={this.handleback}>\n                          BACK\n                        </button><br/><br/> \n                        <span >Name: </span><br/>\n                          <input required onChange={this.handleNameChange} className = \"inputs\" type=\"text\" name=\"name\" /><br/><br/>\n                        <span >Phone: </span><br/>\n                          <input onChange={this.handlePhoneChange} className = \"inputs\" type=\"tel\"  pattern=\"[1-9]{1}[0-9]{9}\" required name=\"phone\"/>\n\n                          <div className=\"showStates\">\n                            <br/>\n                              <span style={{fontWeight:'bold'}}>\n                                Subscriber to be added:\n                              </span><br/>\n                            <span>Name:{this.state.name}</span><br/> \n                            <span>Phone:{this.state.phone}</span> \n                          </div>\n                          <br />\n                          <div >\n                          <button type=\"submit\" onClick={this.handleAdd} className=\"myBtn\" style={{color:'white',backgroundColor:'#4CAF50',padding:'10px',paddingLeft:'15px',paddingRight:'15px'}}>\n                            ADD\n                          </button>\n                          </div>\n                        </form>\n                    </div>\n    return (\n      <div className=\"App\">\n        <header className=\"appHeader\">\n           <p>\n           PHONE DIRECTORY\n          </p>\n        </header>\n                  {this.state.inputsShow?inputs:''}\n              <div>\n                <br />\n                {!this.state.inputsShow?showAdd1:'' }            \n              </div>\n        <br/>  \n\n            <div id='contactsDiv'>\n          \n            </div>\n\n            <div className=\"footer\">\n              <p>  <span style={{opacity:0.7}}>Developed By  </span>Jayprakash Kumar , \n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/jayprakashkumar1\"> GitHub Profile , </a>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/jayprakash-kumar-82882b154/\"> LinkedIn Profile  </a>\n            </p>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}